<?xml version="1.0" ?>
<launch>
    <!-- Create gazebo world -->
    <include file="$(find gazebo_ros)launch/empty_world.launch" >
        <!--<arg name="world_name" value="$(find gazebo_ros)/worlds/empty.world" />-->
        <arg name="world_name" value="$(find my_cool_project)/maps/turtlebot3_world.world" />
        <arg name="gui" value="false" />
        <arg name="use_sim_time" value="true" />
        <arg name="paused" value="false" />
    </include>
    
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_burger_for_autorace.urdf.xacro" />
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_waffle -x 0.5 -y 0.5 -z 0 -Y 0 -param robot_description" />

	<include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch"/>

    <node pkg="map_server" name="map_server" type="map_server" args="$(find my_cool_project)/maps/map.yaml"/>
    <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find my_cool_project)/rviz_config.rviz"/>
  
    <!-- Arguments -->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="cmd_vel_topic" default="/cmd_vel" />
    <arg name="odom_topic" default="odom" />
    <arg name="move_forward_only" default="false"/>

    <!-- move_base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
        <rosparam file="$(find my_cool_project)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find my_cool_project)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find my_cool_project)/param/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find my_cool_project)/param/global_costmap_params.yaml" command="load" />
        <rosparam file="$(find my_cool_project)/param/move_base_params.yaml" command="load" />
        <rosparam file="$(find my_cool_project)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
        <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
        <remap from="odom" to="$(arg odom_topic)"/>
        <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
    </node>

    <!-- Define a sequence of four points, will be included as ROS parameters and published as goals by the test node-->
    <param name="point1" type="yaml" value="{x: 0.0, y: 2.0}" />
    <param name="point2" type="yaml" value="{x: 2.0, y: 0.0}" />
    <param name="point3" type="yaml" value="{x: -1.0, y: -0.5}" />
    <param name="point4" type="yaml" value="{x: -2.0, y: 0.0}" />

    <!-- Start test node -->
    <node pkg="my_cool_project" type="Move_Turtlebot" name="Move_Turtlebot_node" output="screen" />
    <node pkg="my_cool_project" type="EKF_Loc" name="EKF_Loc_node" output="screen" launch-prefix="xterm -geometry 70x30 -fa 'Monospace' -fs 14 -e"/>
    <node pkg="my_cool_project" type="cl" name="cl_node" output="screen" launch-prefix="xterm -geometry 70x30 -fa 'Monospace' -fs 14 -e"/>


</launch>
